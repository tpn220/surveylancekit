import webapp2
import jinja2
import os
from google.appengine.ext import db
from google.appengine.api import users
import categories
import surveyusers

jinja_environment = jinja2.Environment(
    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)))

user = users.get_current_user()


class ManageCategory(webapp2.RequestHandler):
    
    def rendering(self):
        parent_categories = db.GqlQuery('SELECT * FROM category where creator = \'%s\'' %user.nickname())
                
        greeting = ("Please select what you want to do: %s! (<a href=\"%s\">sign out</a>)\n" %
                    (user.nickname(), users.create_logout_url("/")))
        template_values = {
                           'user' : user.nickname(),
                           'greeting' :  greeting,
                           'parent_categories' : parent_categories
                           }
        template = jinja_environment.get_template('managecategory.html')
        self.response.out.write(template.render(template_values))
                
    def post(self):
        category_name = self.request.get('newcatname', 'None')
        if category_name is not None:
            new_category = categories.category(name=category_name, creator=user.nickname())
            new_category.put()
        self.rendering()
    
    def get(self):  
        if user:
            function_type = self.request.get('function', 'None')
            cat_name = self.request.get('cat_name', 'None')
            parent_user = surveyusers.surveyuser.get_by_key_name(user.user_id())
            
            if function_type == 'newcat':
                self.createNewCategory()
            elif function_type == 'edit':
                self.editCategory(cat_name)
            else:
                if function_type == 'delete':
                    cat_to_delete_query = db.GqlQuery('SELECT * FROM category where creator = \'%s\' AND name = \'%s\'' %(user.nickname(), cat_name))
                    cat_to_delete = cat_to_delete_query[0]
                    cat_to_delete.delete()
            
                self.rendering()
        else:
            self.redirect(users.create_login_url(self.request.uri))
            
    def editCategory(self, cat_name):
        category_items = db.GqlQuery('SELECT * FROM item where creator = \'%s\' AND category = \'%s\'' %(user.nickname(), cat_name))
        
        template_values = {
                           'category' : cat_name,
                           'category_items' : category_items
                           }
        template = jinja_environment.get_template('addnewcategory.html')
        self.response.out.write(template.render(template_values))
    
    def createNewCategory(self):
        template_values = {
                           }
        template = jinja_environment.get_template('addnewcategory.html')
        self.response.out.write(template.render(template_values))
    
            
app = webapp2.WSGIApplication([('/manage_category.*', ManageCategory)],
                              debug=True)

if __name__ == '__main__':
    pass